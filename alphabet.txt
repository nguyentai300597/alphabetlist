import 'package:KlbAPP/modes/news.dart';
import 'package:draggable_scrollbar/draggable_scrollbar.dart';
import 'package:faker/faker.dart';
import 'package:flutter/material.dart';

class pagecontact extends StatefulWidget {
  @override
  _pagecontactState createState() => _pagecontactState();
}

class _pagecontactState extends State<pagecontact> {
  ScrollController _semicircleController = ScrollController();
  List<String> usersList = <String>[];
  double count=0;

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    List<int>since=[13,-1,3,5];
    News tintic=News(dateCreated: "13",title: "eqwe",postContent: "danh sach",id: "1",uRLImage: "13123");

    List<News>dsnew=[News(dateCreated: "13",title: "qeqweww",postContent: "danh sach",id: "1",uRLImage: "13123"),News(dateCreated: "13",title: "eqwe",postContent: "danh sach",id: "1",uRLImage: "13123")];
    for (int i = 0; i < 20; i++) {
      usersList.add(faker.person.name());
    }

    //sort the list
    usersList.sort((a, b) {
      
      return a.toLowerCase().compareTo(b.toLowerCase());
    });
    print(usersList.indexWhere((element) => element.startsWith("aa")));
    print(usersList.indexOf("1"));
    since.sort();
     print(since);
    
  }
  @override
  Widget build(BuildContext context) {
   
    return  Scaffold(
      
      body: SafeArea(
              child: SemicircleDemo(
          controller: _semicircleController,
          nameList: usersList,
        ),
      ),
    );
  }
}

class SemicircleDemo extends StatelessWidget {
  final List<String> nameList;

  final ScrollController controller;

  const SemicircleDemo({Key key, @required this.controller, this.nameList})
      : super(key: key);

  @override
  Widget build(BuildContext context) {
    return DraggableScrollbar.semicircle(
      labelTextBuilder: (offset) {
        final int currentItem = offset ~/ 40;
        var letter = currentItem <= nameList.length - 1
            ? nameList[currentItem].substring(0, 2)
            : nameList.last.substring(0, 2);
        return Text("$letter");
      },
      alwaysVisibleScrollThumb: true,
      labelConstraints: BoxConstraints.tightFor(width: 80.0, height: 30.0),
      controller: controller,
      child: ListView.builder(
        controller: controller,
        itemBuilder: (BuildContext context, int index) {
          return new Card(
            child: new Container(
              color:const Color(0xFFad3e67),
              // decoration: new BoxDecoration(
              //   gradient: LinearGradient(
              //     colors: [const Color(0xFF4286f4), const Color(0xFFad3e67)],
              //   ),
              // ),
              alignment: Alignment.centerLeft,
              padding: const EdgeInsets.all(10.0),
              child: new Text(nameList[index]),
            ),
          );
        },
        itemCount: nameList.length,
      ),
    );
  }
}